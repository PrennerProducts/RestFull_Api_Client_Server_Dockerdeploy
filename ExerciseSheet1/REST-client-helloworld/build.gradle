plugins {
    id 'java'
    id 'application'  // Für gradle run
    id 'com.github.johnrengelman.shadow' version '7.1.0'
}

application {
    // Hier die HaubptKlasse für gradle run
    mainClass = 'REST.client.helloworld.RestClient'
}

run {
    standardInput = System.in
}

repositories {
    mavenCentral()
}

dependencies {
   implementation 'org.jboss.resteasy:resteasy-servlet-initializer:3.15.6.Final'
    implementation 'org.jboss.resteasy:resteasy-client:3.15.6.Final'
    implementation 'org.jboss.resteasy:resteasy-jackson2-provider:3.15.6.Final'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
}


group = 'mci.resteasy.examples.fatjar'
version = '1.0-SNAPSHOT'
description = 'fatjar'
sourceCompatibility = '17'

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest {
        attributes(
                'Class-Path': configurations.runtimeClasspath.collect { it.getName() }.join(' '),
                'Main-Class': 'REST.client.helloworld.RestClient'
        )
    }
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}



//Creates a Assignment.zip under build/distributions
tasks.register('mciSrcZip', Zip) {
    from projectDir
    include 'src/**/*'
    include '*.gradle'
    include 'gradlew'
    include 'gradlew.bat'
    include 'gradle/**/*'
    archiveFileName = "Assignment.zip"
}

tasks.withType(JavaExec).configureEach {
    if (System.getProperty('DEBUG', 'false') == 'true') {
        jvmArgs '-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=9099'
    }
}

